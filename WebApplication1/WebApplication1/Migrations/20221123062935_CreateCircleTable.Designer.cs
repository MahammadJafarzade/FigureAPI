// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.DAL;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221123062935_CreateCircleTable")]
    partial class CreateCircleTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WebApplication1.Figures.Circle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<int>("CenterId")
                        .HasColumnType("int");

                    b.Property<double>("Perimeter")
                        .HasColumnType("float");

                    b.Property<double>("Radius")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CenterId");

                    b.ToTable("Circles");
                });

            modelBuilder.Entity("WebApplication1.Figures.Point", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CircleId")
                        .HasColumnType("int");

                    b.Property<double>("CoordinateX")
                        .HasColumnType("float");

                    b.Property<double>("CoordinateY")
                        .HasColumnType("float");

                    b.Property<int?>("RectangleId")
                        .HasColumnType("int");

                    b.Property<int?>("SquareId")
                        .HasColumnType("int");

                    b.Property<int?>("TriangleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CircleId");

                    b.HasIndex("RectangleId");

                    b.HasIndex("SquareId");

                    b.HasIndex("TriangleId");

                    b.ToTable("Points");
                });

            modelBuilder.Entity("WebApplication1.Figures.Rectangle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<int>("CenterId")
                        .HasColumnType("int");

                    b.Property<double>("Perimeter")
                        .HasColumnType("float");

                    b.Property<double>("SideA")
                        .HasColumnType("float");

                    b.Property<double>("SideB")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CenterId");

                    b.ToTable("Rectangles");
                });

            modelBuilder.Entity("WebApplication1.Figures.Square", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<int>("CenterId")
                        .HasColumnType("int");

                    b.Property<double>("Perimeter")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CenterId");

                    b.ToTable("Squares");
                });

            modelBuilder.Entity("WebApplication1.Figures.Triangle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<int>("CenterId")
                        .HasColumnType("int");

                    b.Property<double>("Perimeter")
                        .HasColumnType("float");

                    b.Property<double>("SideA")
                        .HasColumnType("float");

                    b.Property<double>("SideB")
                        .HasColumnType("float");

                    b.Property<double>("SideC")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CenterId");

                    b.ToTable("Triangles");
                });

            modelBuilder.Entity("WebApplication1.Figures.Circle", b =>
                {
                    b.HasOne("WebApplication1.Figures.Point", "Center")
                        .WithMany()
                        .HasForeignKey("CenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Center");
                });

            modelBuilder.Entity("WebApplication1.Figures.Point", b =>
                {
                    b.HasOne("WebApplication1.Figures.Circle", null)
                        .WithMany("Points")
                        .HasForeignKey("CircleId");

                    b.HasOne("WebApplication1.Figures.Rectangle", null)
                        .WithMany("Points")
                        .HasForeignKey("RectangleId");

                    b.HasOne("WebApplication1.Figures.Square", null)
                        .WithMany("Points")
                        .HasForeignKey("SquareId");

                    b.HasOne("WebApplication1.Figures.Triangle", null)
                        .WithMany("Points")
                        .HasForeignKey("TriangleId");
                });

            modelBuilder.Entity("WebApplication1.Figures.Rectangle", b =>
                {
                    b.HasOne("WebApplication1.Figures.Point", "Center")
                        .WithMany()
                        .HasForeignKey("CenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Center");
                });

            modelBuilder.Entity("WebApplication1.Figures.Square", b =>
                {
                    b.HasOne("WebApplication1.Figures.Point", "Center")
                        .WithMany()
                        .HasForeignKey("CenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Center");
                });

            modelBuilder.Entity("WebApplication1.Figures.Triangle", b =>
                {
                    b.HasOne("WebApplication1.Figures.Point", "Center")
                        .WithMany()
                        .HasForeignKey("CenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Center");
                });

            modelBuilder.Entity("WebApplication1.Figures.Circle", b =>
                {
                    b.Navigation("Points");
                });

            modelBuilder.Entity("WebApplication1.Figures.Rectangle", b =>
                {
                    b.Navigation("Points");
                });

            modelBuilder.Entity("WebApplication1.Figures.Square", b =>
                {
                    b.Navigation("Points");
                });

            modelBuilder.Entity("WebApplication1.Figures.Triangle", b =>
                {
                    b.Navigation("Points");
                });
#pragma warning restore 612, 618
        }
    }
}
